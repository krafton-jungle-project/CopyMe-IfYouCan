name: Copy me If you Can

on:
  # main branch에 푸시 시
  push:
    branches: ['feature/action']

  # main branch에 PR 시
  pull_request:
    branches: ['feature/action']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: create env file
        working-directory: ./packages/server
        run: |
          touch .env
          echo "MONGODB_URI=${{ secrets.NEST_APP_MONGODB_URI }}" >> .env
          echo "PORT=${{ secrets.NEST_APP_PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.NEST_APP_JWT_SECRET }}" >> .env
          echo "SWAGGER_USER=${{ secrets.NEST_APP_SWAGGER_USER }}" >> .env
          echo "SWAGGER_PASSWORD=${{ secrets.NEST_APP_SWAGGER_PASSWORD }}" >> .env
          echo "AWS_S3_ACCESS_KEY=${{ secrets.NEST_APP_AWS_S3_ACCESS_KEY }}" >> .env
          echo "AWS_S3_SECRET_KEY=${{ secrets.NEST_APP_AWS_S3_SECRET_KEY }}" >> .env
          echo "AWS_S3_REGION=${{ secrets.NEST_APP_AWS_S3_REGION}}" >> .env
          echo "AWS_S3_BUCKET_NAME=${{ secrets.NEST_APP_AWS_S3_BUCKET_NAME }}" >> .env
          cat .env

      - name: install dependencies
        run: |
          yarn install

      # - name: build client
      #   run: yarn client:build
      #   env:
      #     CI: ''

      - name: build server
        run: yarn server:build
        env:
          CI: ''

      - name: zip distributions
        run: zip -r server-build.zip ./packages/server/dist ./packages/server  ./appspec.yml ./scripts

      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: upload to S3
        run: aws s3 cp --region ap-northeast-2 ./server-build.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}

      - name: deploy with AWS codeDeploy
        run: aws deploy create-deployment
          --application-name copyme-Ifyoucan
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name github-action
          --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},bundleType=zip,key=server-build.zip
